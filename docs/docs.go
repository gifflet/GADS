// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/device": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing device in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Devices"
                ],
                "summary": "Update a device",
                "parameters": [
                    {
                        "description": "Device data",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Device"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new device in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Devices"
                ],
                "summary": "Add a new device",
                "parameters": [
                    {
                        "description": "Device data",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Device"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/device/{udid}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a device from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Devices"
                ],
                "summary": "Delete a device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/device/{udid}/release": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Force release a device that is currently in use",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Devices"
                ],
                "summary": "Release a device in use",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/devices": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve list of all devices with provider information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Devices"
                ],
                "summary": "Get all devices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.AdminDeviceData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/download-github-file": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Download a resource file from the GADS GitHub repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Admin - Files"
                ],
                "summary": "Download resource from GitHub repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the file to download",
                        "name": "fileName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File downloaded successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/files": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve list of all files stored in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Files"
                ],
                "summary": "Get all files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FileEntry"
                            }
                        }
                    }
                }
            }
        },
        "/admin/global-settings": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve global streaming settings from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Settings"
                ],
                "summary": "Get global stream settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StreamSettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update global streaming settings in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Settings"
                ],
                "summary": "Update global stream settings",
                "parameters": [
                    {
                        "description": "Stream settings",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StreamSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/provider/{nickname}/info": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Server-sent events stream of provider information updates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Admin - Providers"
                ],
                "summary": "Provider information stream",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider nickname",
                        "name": "nickname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Provider"
                        }
                    }
                }
            }
        },
        "/admin/providers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve list of all providers in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Providers"
                ],
                "summary": "Get all providers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Provider"
                            }
                        }
                    }
                }
            }
        },
        "/admin/providers/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new provider in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Providers"
                ],
                "summary": "Add a new provider",
                "parameters": [
                    {
                        "description": "Provider data",
                        "name": "provider",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Provider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Provider"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/providers/logs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve provider logs from a specific collection with optional limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Get provider logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Log limit (max 1000, default 200)",
                        "name": "logLimit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LogEntry"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/providers/update": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing provider in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Providers"
                ],
                "summary": "Update a provider",
                "parameters": [
                    {
                        "description": "Provider data",
                        "name": "provider",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Provider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/providers/{nickname}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a provider from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Providers"
                ],
                "summary": "Delete a provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider nickname",
                        "name": "nickname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/secret-keys": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve list of all secret keys in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Secret Keys"
                ],
                "summary": "Get all secret keys",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by status (active/disabled)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SecretKeyResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new secret key in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Secret Keys"
                ],
                "summary": "Add a new secret key",
                "parameters": [
                    {
                        "description": "Secret key data",
                        "name": "secretKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SecretKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SecretKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/secret-keys/history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve audit history of secret key changes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Secret Keys"
                ],
                "summary": "Get secret key history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default 10, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by origin",
                        "name": "origin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by action",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter from date (RFC3339 format)",
                        "name": "from_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter to date (RFC3339 format)",
                        "name": "to_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SecretKeyHistoryResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/secret-keys/history/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific audit record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Secret Keys"
                ],
                "summary": "Get secret key history by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Audit log ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SecretKeyAuditLogResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/secret-keys/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing secret key in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Secret Keys"
                ],
                "summary": "Update a secret key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Secret key data",
                        "name": "secretKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SecretKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SecretKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Disable an existing secret key in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Secret Keys"
                ],
                "summary": "Disable a secret key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Justification for disabling",
                        "name": "justification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.JustificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/upload-file": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload a file to MongoDB with custom filename",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Files"
                ],
                "summary": "Upload a file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom filename for MongoDB",
                        "name": "fileName",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user information in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Users"
                ],
                "summary": "Update an existing user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Users"
                ],
                "summary": "Add a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/user/{nickname}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a user from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User nickname",
                        "name": "nickname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve list of all users in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/workspaces": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve list of all workspaces with pagination and filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Workspaces"
                ],
                "summary": "Get all workspaces",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by tenant",
                        "name": "tenant",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WorkspacesWithDeviceCountResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing workspace in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Workspaces"
                ],
                "summary": "Update a workspace",
                "parameters": [
                    {
                        "description": "Workspace data",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Workspace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Workspace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new workspace in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Workspaces"
                ],
                "summary": "Create a new workspace",
                "parameters": [
                    {
                        "description": "Workspace data",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Workspace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Workspace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/workspaces/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a workspace from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Workspaces"
                ],
                "summary": "Delete a workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/appium-logs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve Appium logs from a specific collection with optional limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Get Appium logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Log limit (max 1000, default 100)",
                        "name": "logLimit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LogEntry"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/appium-session-logs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve Appium logs for a specific session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Get Appium session logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Appium session ID",
                        "name": "session",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LogEntry"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/authenticate": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User authentication",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.AuthCreds"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/available-devices": {
            "get": {
                "description": "Server-sent events stream of available devices filtered by workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Devices Control"
                ],
                "summary": "Available devices stream",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspaceId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LocalHubDevice"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/device/{udid}/files": {
            "get": {
                "description": "Returns a list of shared storage directories/files on Android devices",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices - Files"
                ],
                "summary": "Android shared storage directories/files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AndroidFileNodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/device/{udid}/files/delete": {
            "delete": {
                "description": "Deletes a file on the Android device's shared storage via ADB",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices - Files"
                ],
                "summary": "Delete a file from Android shared storage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Full shared storage path to the file to be deleted",
                        "name": "filePath",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/device/{udid}/files/pull": {
            "post": {
                "description": "Pulls a file from the Android device's shared storage via ADB and downloads it",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Devices - Files"
                ],
                "summary": "Pull a file from Android shared storage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Full shared storage path to the file to be downloaded",
                        "name": "filePath",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/device/{udid}/files/push": {
            "post": {
                "description": "Uploads a file via multipart/form-data and pushes it to the target shared storage path using ADB",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices - Files"
                ],
                "summary": "Push a file to Android device shared storage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path on shared storage where file should be pushed to",
                        "name": "destPath",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File to push",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/devices/control/{udid}/in-use": {
            "get": {
                "description": "WebSocket connection to manage device usage status and control",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices Control"
                ],
                "summary": "Device in-use WebSocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Switching Protocols",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check if the GADS hub is running and healthy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HealthResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout user (for JWT tokens, client should discard the token)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/provider-update": {
            "post": {
                "description": "Receive updates from providers about device status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "summary": "Provider update",
                "parameters": [
                    {
                        "description": "Provider device data",
                        "name": "providerData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProviderData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/user-info": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve user information from JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserInfoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workspaces": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve workspaces accessible to the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get user workspaces",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WorkspacesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.AuthCreds": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.APIResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {}
            }
        },
        "models.AndroidFileNode": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/models.AndroidFileNode"
                    }
                },
                "fileDate": {
                    "type": "integer"
                },
                "fullPath": {
                    "type": "string"
                },
                "isFile": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.AndroidFileNodeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/models.AndroidFileNode"
                }
            }
        },
        "models.AuthResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "expires_in": {
                    "type": "integer",
                    "example": 3600
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "models.Device": {
            "type": "object",
            "properties": {
                "connected": {
                    "description": "if device is currently connected",
                    "type": "boolean"
                },
                "device_type": {
                    "description": "The type of device - ` + "`" + `real` + "`" + ` or ` + "`" + `emulator` + "`" + `",
                    "type": "string"
                },
                "hardware_model": {
                    "description": "hardware model of device",
                    "type": "string"
                },
                "host": {
                    "description": "NON-DB DATA\n/ COMMON VALUES",
                    "type": "string"
                },
                "installed_apps": {
                    "description": "/ PROVIDER ONLY VALUES\n// RETURNABLE VALUES",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ip_address": {
                    "description": "IP address of the device",
                    "type": "string"
                },
                "is_resetting": {
                    "description": "if device setup is currently being reset",
                    "type": "boolean"
                },
                "last_updated_timestamp": {
                    "description": "last time the device data was updated",
                    "type": "integer"
                },
                "name": {
                    "description": "name of the device",
                    "type": "string"
                },
                "os": {
                    "description": "device OS",
                    "type": "string"
                },
                "os_version": {
                    "description": "OS version of the device",
                    "type": "string"
                },
                "provider": {
                    "description": "nickname of the device host(provider)",
                    "type": "string"
                },
                "provider_state": {
                    "description": "current state of the device on the provider - init, preparing, live",
                    "type": "string"
                },
                "screen_height": {
                    "description": "screen height of device",
                    "type": "string"
                },
                "screen_width": {
                    "description": "screen width of device",
                    "type": "string"
                },
                "stream_jpeg_quality": {
                    "description": "The target JPEG quality for the MJPEG video streams",
                    "type": "integer"
                },
                "stream_scaling_factor": {
                    "description": "The target scaling factor for the MJPEG video streams",
                    "type": "integer"
                },
                "stream_target_fps": {
                    "description": "The target FPS for the MJPEG video streams",
                    "type": "integer"
                },
                "udid": {
                    "description": "DB DATA",
                    "type": "string"
                },
                "usage": {
                    "description": "what is the device used for: enabled(automation and remote control), automation(only Appium testing), remote(only remote control), disabled",
                    "type": "string"
                },
                "use_webrtc_video": {
                    "description": "Should the device use WebRTC video instead of MJPEG",
                    "type": "boolean"
                },
                "webrtc_video_codec": {
                    "description": "Which video codec should the device use for WebRTC video stream",
                    "type": "string"
                },
                "workspace_id": {
                    "description": "ID of the associated workspace",
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Something went wrong"
                }
            }
        },
        "models.FileEntry": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "test-app.apk"
                },
                "size": {
                    "type": "integer",
                    "example": 1048576
                },
                "upload_date": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                }
            }
        },
        "models.HealthResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "models.JustificationRequest": {
            "type": "object",
            "properties": {
                "justification": {
                    "type": "string",
                    "example": "Reason for this action"
                }
            }
        },
        "models.LocalHubDevice": {
            "type": "object",
            "properties": {
                "appium_new_command_timeout": {
                    "type": "integer"
                },
                "available": {
                    "description": "if device is currently available - not only connected, but setup completed",
                    "type": "boolean"
                },
                "in_use": {
                    "type": "boolean"
                },
                "in_use_by": {
                    "type": "string"
                },
                "in_use_ts": {
                    "type": "integer"
                },
                "info": {
                    "$ref": "#/definitions/models.Device"
                },
                "is_available_for_automation": {
                    "type": "boolean"
                },
                "is_running_automation": {
                    "type": "boolean"
                },
                "last_automation_action_ts": {
                    "type": "integer"
                }
            }
        },
        "models.LogEntry": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string",
                    "example": "INFO"
                },
                "message": {
                    "type": "string",
                    "example": "Device connected successfully"
                },
                "source": {
                    "type": "string",
                    "example": "appium"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00.123Z"
                }
            }
        },
        "models.Provider": {
            "type": "object",
            "properties": {
                "host_address": {
                    "type": "string"
                },
                "hub_address": {
                    "type": "string"
                },
                "last_updated": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "provide_android": {
                    "type": "boolean"
                },
                "provide_ios": {
                    "type": "boolean"
                },
                "provide_tizen": {
                    "type": "boolean"
                },
                "selenium_grid": {
                    "type": "string"
                },
                "setup_appium_servers": {
                    "type": "boolean"
                },
                "supervision_password": {
                    "type": "string"
                },
                "use_gads_ios_stream": {
                    "type": "boolean"
                },
                "use_selenium_grid": {
                    "type": "boolean"
                },
                "wda_bundle_id": {
                    "type": "string"
                }
            }
        },
        "models.ProviderData": {
            "type": "object",
            "properties": {
                "device_data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Device"
                    }
                },
                "provider": {
                    "$ref": "#/definitions/models.Provider"
                }
            }
        },
        "models.SecretKeyAuditLogResponse": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "create"
                },
                "id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011"
                },
                "is_default": {
                    "type": "boolean",
                    "example": false
                },
                "justification": {
                    "type": "string",
                    "example": "Adding new secret key for web client"
                },
                "origin": {
                    "type": "string",
                    "example": "web.example.com"
                },
                "secret_key_id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439012"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "user": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "models.SecretKeyHistoryResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "logs": {
                    "type": "array",
                    "items": {}
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 50
                },
                "total_pages": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "models.SecretKeyRequest": {
            "type": "object",
            "properties": {
                "is_default": {
                    "type": "boolean",
                    "example": false
                },
                "justification": {
                    "type": "string",
                    "example": "Adding new key for web client"
                },
                "key": {
                    "type": "string",
                    "example": "your_secret_key_here"
                },
                "origin": {
                    "type": "string",
                    "example": "web.example.com"
                },
                "tenant_identifier_claim": {
                    "type": "string",
                    "example": "tenant"
                },
                "user_identifier_claim": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "models.SecretKeyResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011"
                },
                "is_default": {
                    "type": "boolean",
                    "example": false
                },
                "origin": {
                    "type": "string",
                    "example": "web.example.com"
                },
                "tenant_identifier_claim": {
                    "type": "string",
                    "example": "tenant"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "user_identifier_claim": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "models.StreamSettings": {
            "type": "object",
            "properties": {
                "jpeg_quality": {
                    "type": "integer"
                },
                "scaling_factor_android": {
                    "type": "integer"
                },
                "scaling_factor_ios": {
                    "type": "integer"
                },
                "target_fps": {
                    "type": "integer"
                }
            }
        },
        "models.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Operation completed successfully"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011"
                },
                "password": {
                    "type": "string",
                    "example": "secure_password"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "user"
                    ],
                    "example": "user"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                },
                "workspace_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "workspace_id_1",
                        "workspace_id_2"
                    ]
                }
            }
        },
        "models.UserInfoResponse": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "user",
                        "admin"
                    ]
                },
                "tenant": {
                    "type": "string",
                    "example": "acme-corp"
                },
                "user_identifier_claim": {
                    "type": "string",
                    "example": "username"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "models.Workspace": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Workspace for development team testing"
                },
                "id": {
                    "type": "string",
                    "example": "workspace_123"
                },
                "is_default": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Development Team"
                },
                "tenant": {
                    "type": "string",
                    "example": "acme-corp"
                }
            }
        },
        "models.WorkspaceWithDeviceCount": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Workspace for development team testing"
                },
                "device_count": {
                    "type": "integer",
                    "example": 5
                },
                "id": {
                    "type": "string",
                    "example": "workspace_123"
                },
                "is_default": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Development Team"
                },
                "tenant": {
                    "type": "string",
                    "example": "acme-corp"
                }
            }
        },
        "models.WorkspacesResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer",
                    "example": 25
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Workspace"
                    }
                }
            }
        },
        "models.WorkspacesWithDeviceCountResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer",
                    "example": 25
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WorkspaceWithDeviceCount"
                    }
                }
            }
        },
        "router.AdminDeviceData": {
            "type": "object",
            "properties": {
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Device"
                    }
                },
                "providers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
